% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download_apple_mtr_data.R
\name{download_apple_mtr_data}
\alias{download_apple_mtr_data}
\title{Download Apple Mobility Trend Reports Data}
\usage{
download_apple_mtr_data(
  type = "country",
  url = NULL,
  silent = FALSE,
  cached = TRUE
)
}
\arguments{
\item{type}{The type of data that you want to retrieve. Can be any subset of
\itemize{
 \item{"country": }{Mobility trends by country.}
 \item{"country_region": }{Mobility trends by country regions as classified by Apple (only available for some countries).}
 \item{"country_city": }{Mobility trends by city as classified by Apple (only available for some countries).}
}}

\item{url}{The URL of the now defunct Apple Mobility Trend Reports. Ignored.}

\item{silent}{Whether you want the function to send some status messages to
the console. Might be informative as downloading will take some time
and thus defaults to \code{TRUE}.}

\item{cached}{Whether you want to download the cached version of the data
from the {tidycovid19} Github repository. As Apple is no longer provides
the data, this needs to be set to \code{TRUE} and this is what it
defaults to. Will return an error if set to \code{FALSE}.}
}
\value{
A data frame containing the data. It includes a \code{timestamp}
    variable indicating the time of data retrieval.
}
\description{
Provides Mobility Trends Reports related to Covid-19 as provided by Apple 
(\url{https://www.apple.com/covid19/mobility}). Since apple is no longer 
providing this data since April 14, 2022 the cached data will be returned
and calling the function with \code{cache = TRUE} will yield an error.
}
\examples{
df <- download_apple_mtr_data(silent = TRUE, cached = TRUE)
df \%>\%
  dplyr::group_by(date) \%>\%
  dplyr::summarize(
    walking = mean(walking, na.rm = TRUE)
  ) \%>\%
  ggplot2::ggplot(ggplot2::aes(x = date, y = walking)) +
  ggplot2::geom_line()

df <- download_apple_mtr_data(type = "country_city", silent = TRUE, cached = TRUE)
df \%>\%
  dplyr::filter(iso3c == "DEU") \%>\%
  ggplot2::ggplot(ggplot2::aes(x = date, y = driving, color = city)) +
  ggplot2::geom_line()

}
